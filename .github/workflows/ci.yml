name: CI

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - macOS-latest
        # Lets use the preinstalled node version (much faster)
        node-version:
          - 12.x

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v3.0.3
        if: startsWith(runner.os, 'mac')
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get npm cache directory
        if: startsWith(runner.os, 'win')
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3.0.3
        if: startsWith(runner.os, 'win')
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Electron
        uses: actions/cache@v3.0.3
        with:
          path: ${{ github.workspace }}/.cache/electron
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run dist:release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
